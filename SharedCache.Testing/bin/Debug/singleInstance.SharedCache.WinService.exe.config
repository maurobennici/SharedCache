<?xml version="1.0" encoding="utf-8"?>
<configuration>
	<configSections>
		<section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog" />
		<section name="replicatedSharedCache" type="	SharedCache.WinServiceCommon.Configuration.Server.IndexusServerProviderSection, &#xD;&#xA;										SharedCache.WinServiceCommon" />
	</configSections>
	<appSettings>
		<add key="ClientSettingsProvider.ServiceUri" value="" />
	</appSettings>
	<replicatedSharedCache defaultProvider="ServerSharedCacheProvider">
		<serverSetting
			ServiceCacheIpAddress="127.0.0.1"
			ServiceCacheIpPort="48888"
			SharedCacheVersionNumber="3.0.5.2"
			LoggingEnable="1"
			ServiceFamilyMode="0"
			CacheAmountOfObjects="-1"
			CacheAmountFillFactorInPercentage="90"
			ServiceCacheCleanup="LRU"
			ServiceCacheCleanupThreadJob="3600000"
			TcpServerMaxThreadToSet="-1"
			TcpServerMinThreadToSet="-1"
			SocketPoolMinAvailableSize="5"
			SocketPoolValidationInterval="00:02:00"
			SocketPoolTimeout="00:02:00"
			/>
		<!--
			SocketPoolMinAvailableSize="5"
			SocketPoolValidationInterval="00:02:00"
			SocketPoolTimeout="00:02:00"
			-->
		<replicatedServers>
			<!--<add key="SrvZh02" ipaddress="192.168.212.50" port="48888" />-->
			<!-- DO NOT DEFINE THE INSTANCE ITSELF !!! IT WILL BE AUTOMATICALLY REMOVED AT RUNTIME -->
		</replicatedServers>
		<providers>
			<add name="ServerSharedCacheProvider" type="SharedCache.WinServiceCommon.Provider.Server.IndexusServerSharedCacheProvider, SharedCache.WinServiceCommon">
			</add>
		</providers>
	</replicatedSharedCache>
	<nlog autoReload="true" throwExceptions="true">
		<targets async="true">
			<target name="shared_cache_general" type="File" layout="${longdate}|${level:uppercase=true}|${aspnet-request:item=logSession}|${message}" filename="C:\temp\testing\logs\server\${date:format=yyyy-MM-dd}_shared_cache_general_log.txt" />
			<target name="shared_cache_traffic" type="File" layout="${longdate}|${level:uppercase=true}|${aspnet-request:item=logSession}|${message}" filename="C:\temp\testing\logs\server\${date:format=yyyy-MM-dd}_shared_cache_traffic_log.txt" />
			<target name="shared_cache_tracking" type="File" layout="${longdate}|${level:uppercase=true}|${aspnet-request:item=logSession}|${message}" filename="C:\temp\testing\logs\server\${date:format=yyyy-MM-dd}_shared_cache_tracking_log.txt" />
			<target name="shared_cache_sync" type="File" layout="${longdate}|${level:uppercase=true}|${aspnet-request:item=logSession}|${message}" filename="C:\temp\testing\logs\server\${date:format=yyyy-MM-dd}_shared_cache_sync_log.txt" />
			<target name="shared_cache_memory" type="File" layout="${longdate}|${level:uppercase=true}|${aspnet-request:item=logSession}|${message}" filename="C:\temp\testing\logs\server\${date:format=yyyy-MM-dd}_shared_cache_memory_log.txt" />
		</targets>
		<rules>
			<logger name="General" minlevel="Debug" writeTo="shared_cache_general" final="true" />
			<logger name="Traffic" minlevel="Debug" writeTo="shared_cache_traffic" final="true" />
			<logger name="Tracking" minlevel="Debug" writeTo="shared_cache_tracking" final="true" />
			<logger name="Sync" minlevel="Debug" writeTo="shared_cache_sync" final="true" />
			<logger name="Memory" minlevel="Debug" writeTo="shared_cache_memory" final="true" />
			<logger name="*" minlevel="Debug" writeTo="shared_cache_general" />
			<logger name="*" minlevel="Info" writeTo="shared_cache_general" />
		</rules>
	</nlog>
	<!--Version Number, same like in assemblies-->
	<!--Should information be logged-->
	<!--Location of Cache Service-->
	<!--Location of Cache Service, the port number-->
	<!--
			1 - Enabled
			0 - Disabled
			remember to configure the section of replicatedSharedCache.
		-->
	<!--
			The maximum size of the objects in the Cache in MB.
			To make it unlimited, use value -1 which is the default
			in case of -1 you can receive OutOfMemoryException when the server is 
			not able anymore to receive data.
		-->
	<!-- 
				If the cache received the fillfactor it will start to throw away unused items from the cache
						suggested is a value between: 85% - 95%
				Default value is 90%
				!!!This logic just apply in case CacheAmountOfObjects is different then -1!!!
		-->
	<!--
			- CacheItemPriority: A new option will be created where objects which are added to the cache receives a priority attribute.
			- LRU: Least Recent Used: The objects with the oldest request's will be deleted
			- LFU: Least Frequently Used: Means the object's witch are used less will be deleted from the cache / if all objects are used in same frequency the objects will be used in a randomized order
			- Timebased: The objects with the smallest time left in the cache will be deleted, in case all objects are used with max time, they will be deleted randomized
			- SIZE: Delete always biggest objects until it received the size of FillFactor 
			- Lowest-Latency-First [LLF]: Delete smallest objects until configured FillFactor reached
			- Hybrid: Makes a combination between several parameters: TimeTaken, Amount of Requests, Size, Cache Life Time each parameter receives a number between 1 - n and those with the highest / lowest numbers will be deleted until configured FillFactory reached.
			
			Keys you can use: "CACHEITEMPRIORITY", "LRU", "LFU", "TIMEBASED", "SIZE", "LLF", "HYBRID"
		-->
	<!-- 
			Expire thread interval, if the cache contains data which expires 
			this background thread cleans the cache up [milliseconds].
			1  sec  -> 1000
			30 sec  -> 30000
			1  min  -> 60000
			1  hour -> 3600000
			1  day  -> 86400000
			-> do not define a bigger value then this, the system will fail to read it - its an int 32 value
			-> In case -1 is configured the Thread will be killed after startup.
		-->
	<!-- 
			version pre_release_1.0.2.132 and upper.
			Value: -1 means it will be ignored - which in most cases is suggested, if nothing is configured 
				 it will take the default value which is provided by the system [e.g: min. 3 max. 25]
			-->
	<!--<system.diagnostics>
		<sources>
			<source name="System.Net" tracemode="includehex" maxdatasize="1024">
				<listeners>
					<add name="System.Net"/>
				</listeners>
			</source>
			<source name="System.Net.Sockets">
				<listeners>
					<add name="System.Net"/>
				</listeners>
			</source>
			<source name="System.Net.Cache">
				<listeners>
					<add name="System.Net"/>
				</listeners>
			</source>
		</sources>
		<switches>
			<add name="System.Net" value="Verbose"/>
			<add name="System.Net.Sockets" value="Verbose"/>
			<add name="System.Net.Cache" value="Verbose"/>
		</switches>
		<sharedListeners>
			<add name="System.Net"
        type="System.Diagnostics.TextWriterTraceListener"
        initializeData="network.log"
      />
		</sharedListeners>
		<trace autoflush="true"/>
	</system.diagnostics>-->
	<!--<system.diagnostics>
		<sources>
			<source name="System.Net.Cache">
				<listeners>
					<add name="Cache"/>
				</listeners>
			</source>
		</sources>
		<switches>
			<add name="System.Net.Cache" value="31" />
		</switches>
		<sharedListeners>
			<add name="Cache" traceOutputOptions="ThreadId" type="System.Diagnostics.TextWriterTraceListener" initializeData="Cache.log"/>
		</sharedListeners>
		<trace autoflush="true" />
	</system.diagnostics>-->
	<!--<system.diagnostics>
		<sources>
			<source name="System.Net.Sockets">
				<listeners>
					<add name="Sockets"/>
				</listeners>
			</source>
		</sources>
		<switches>
			<add name="System.Net.Sockets" value="31" />
		</switches>
		<sharedListeners>
			<add name="Sockets" traceOutputOptions="ThreadId" type="System.Diagnostics.TextWriterTraceListener" initializeData="Sockets.log"/>
		</sharedListeners>
		<trace autoflush="true" />
	</system.diagnostics>-->
	<system.web>
		<membership defaultProvider="ClientAuthenticationMembershipProvider">
			<providers>
				<add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
			</providers>
		</membership>
		<roleManager defaultProvider="ClientRoleProvider" enabled="true">
			<providers>
				<add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
			</providers>
		</roleManager>
	</system.web>
</configuration>